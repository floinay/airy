@import "@airy-ui/cdk/styles";

:host {
  @include set-current-element(modal);
  @include element-prop(background, var(--background-primary));
  @include element-prop(padding, var(--indent-xxl));
  @include element-prop(display, inline-flex);
  @include element-prop(position, relative);
  @include element-prop(min-width, 320px);
  @include element-prop(flex-direction, column);
  @include element-prop(max-width, 800px);
  @include element-prop(width, 100%);
  @include element-prop(overflow-x, auto);
  @include element-prop(max-height, 90vh);
  @include element-prop(border-radius, 4px);
}

@media screen and (max-width: 836px) {
  :host {
    @include element-prop(max-width, calc(100vw - var(--indent-s) * 2));

    .air-modal {
      @include element-prop(max-width, calc(100vw - var(--indent-s) * 2));
      @include element-prop(width, 100%);

      &::-webkit-scrollbar {
        width: 0;
      }

      scrollbar-width: none;
    }
  }
}


@media screen and (max-width: 599px) {
  :host {
    .air-modal {
      @include element-prop(min-width, calc(100vw - 32px));
    }
  }
}

@media screen and (max-width: 360px) {
  :host {
    .air-modal {
      @include element-prop(min-width, calc(100vw - 32px));
    }
  }
}

.air-modal-header {
  margin-bottom: var(--indent-l);
}

.modal-close-wrapper {
  @include element-prop(position, absolute);
  @include element-prop(top, var(--indent-m));
}

::ng-deep {
  .ltr {
    .modal-close-wrapper {
      @include set-current-element(modal-close-wrapper);
      @include element-prop(right, var(--indent-m), start);
      @include reset-current-element;
    }
  }

  .rtl {
    .modal-close-wrapper {
      @include set-current-element(modal-close-wrapper);
      @include element-prop(left, var(--indent-m), start);
      @include reset-current-element;
    }
  }
}

@include reset-current-modifier;
@include reset-current-element;
