@import "@airy-ui/cdk/styles";

:host {
  @include set-current-element(slider);
  @include element-prop(display, flex);
  @include element-prop(align-items, center);
  @include element-prop(width, 100%);
  @include element-prop(min-width, 130px);
  @include element-prop(position, relative);
}

.counter {
  @include set-current-element(slider-counter);
  @include element-prop(position, relative);
  @include element-prop(color, current-color());
  @include element-prop(font-size, var(--text1__font-size));
  @include element-prop(line-height, 1);
  @include element-prop(padding-inline-end, var(--indent-s));

  .counter-value {
    @include set-current-element(slider-counter-value);
    @include element-prop(position, absolute);
    @include element-prop(width, 100%);
    @include element-prop(white-space, nowrap);
  }
}

.slider {
  position: relative;
}


.slider-container {
  @include set-current-element(slider-container);
  @include element-prop(height, 6px);
  @include element-prop(width, 100%);
  @include element-prop(border-radius, 3px);
  @include element-prop(border, 1px solid var(--border-color));
  @include element-prop(position, absolute);
  @include element-prop(left, 0);
  @include element-prop(top, 4px);
  @include element-prop(background, var(--background-primary));
  @include element-prop(overflow, hidden);

  &-background {
    @include set-current-element(slide-container-background);
    @include element-prop(background, current-color());
    @include element-prop(border-radius, 3px);
    z-index: 1 !important;
    @include reset-current-element;
  }
}

.slider-button {
  @include set-current-element(slider-button);
  @include element-prop(appearance, none);
  @include element-prop(padding, 0);
  @include element-prop(margin, 0);
  @include element-prop(border, none);
  @include element-prop(position, absolute);
  @include element-prop(background, none);
  @include element-prop(top, 0);
  @include element-prop(z-index, 2);
}

.slider-button-pointer {
  @include set-current-element(slider-button-pointer);
  @include element-prop(border-radius, 100%);
  @include element-prop(width, 14px);
  @include element-prop(display, block);
  @include element-prop(height, 14px);
  @include element-prop(border, 1px solid current-color());
  @include element-prop(background, var(--background-primary));
  @include reset-current-element;
}

::ng-deep {
  .ltr {
    .slider-button {
      @include set-current-element(slider-button);
      @include element-prop(start, 0, $prop-name: left);
      @include reset-current-element;
    }

    .counter-value {
      @include set-current-element(slider-counter-value);
      @include element-prop(start, 0, $prop-name: left);
      @include reset-current-element;
    }
  }

  .rtl {
    .slider-button {
      @include set-current-element(slider-button);
      @include element-prop(start, 0, $prop-name: right);
      @include reset-current-element;
    }

    .counter-value {
      @include set-current-element(slider-counter-value);
      @include element-prop(start, 0, $prop-name: right);
      @include reset-current-element;
    }
  }
}

@include reset-current-element;
